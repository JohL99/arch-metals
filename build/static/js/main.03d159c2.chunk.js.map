{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","validation/is-empty.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/inputReducer.js","reducers/index.js","store.js","components/layout/Navbar.js","components/layout/Footer.js","components/layout/Landing.js","components/common/TextFieldGroup.js","components/auth/Register.js","components/auth/Login.js","components/auth/Consent.js","components/MonthForecast.js","components/CopperInput.js","components/MonthPrices.js","components/GoldInput.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","value","undefined","Object","keys","length","trim","initialState","isAuthenticated","user","price","combineReducers","auth","state","action","input","profile","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","Navbar","e","preventDefault","this","props","authlinks","className","to","id","role","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","href","onClick","onLogoutClick","bind","nonauthlinks","data-target","aria-controls","aria-label","Component","connect","Date","getFullYear","Landing","TextFieldGroup","name","placeholder","error","label","info","onChange","disabled","classnames","defaultProps","Register","password","password2","email","altemail","realname","commodity","sex","age","geolocation","background","workplace","forecastingapproach","bio","onSubmit","nextProps","setState","target","newUser","professionBackground","registerUser","history","class","noValidate","colspan","for","prototypes","PropTypes","func","isRequired","object","userData","post","then","res","push","catch","err","response","data","Login","loginUser","console","log","setItem","jwt_decode","Consent","MonthForecast","colSpan","CopperInput","month","priceAvr","price1","price2","price3","price4","price5","price6","price7","price8","price9","percent1","percent2","percent3","percent4","percent5","percent6","percent7","percent8","percent9","justif","generalcomments","specificComments","comments","totpercent","months","foreprices","newEntry","sanza","fetch","json","yx","map","mutengo","floorprice","constant1","_id","vraipourcent","indice","Moyenne","vraipourcent1","indice1","tot","style","width","rowSpan","validationError","fillPrices","slice","getMonth","lemois","key","CalculPondere","TotalPourcent","rows","toLocaleDateString","weekday","year","day","toLocaleTimeString","MonthPrices","newPrice","protoTypes","registerPrice","GoldInput","jwtToken","currentTime","now","exp","location","App","exact","path","component","Footer","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.03d159c2.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    // Apply to every request\r\n    axios.defaults.headers.common['Authorization'] = token;\r\n  } else {\r\n    // Delete auth header\r\n    delete axios.defaults.headers.common['Authorization'];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\n\r\n// Register User\r\nexport const registerUser = (userData, history) => (dispatch) => {\r\n  axios\r\n    .post(\"/api/users/register\", userData)\r\n    .then((res) => history.push(\"/login\"))\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      })\r\n    );\r\n};\r\n\r\n// Login - Get User Token\r\nexport const loginUser = (userData) => (dispatch) => {\r\n  console.log(userData);\r\n\r\n  axios\r\n    .post(\"/api/users/login\", userData)\r\n    .then((res) => {\r\n      // Save to localStorage\r\n      const { token } = res.data;\r\n      // Set token to ls\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      // Set token to Auth header\r\n      setAuthToken(token);\r\n      // Decode token to get user data\r\n      const decoded = jwt_decode(token);\r\n      // Set current user\r\n      dispatch(setCurrentUser(decoded));\r\n    })\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      })\r\n    );\r\n};\r\n\r\n// Set logged in user\r\nexport const setCurrentUser = (decoded) => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded,\r\n  };\r\n};\r\n\r\n// Log user out\r\nexport const logoutUser = () => (dispatch) => {\r\n  // Remove token from localStorage\r\n  localStorage.removeItem(\"jwtToken\");\r\n  // Remove auth header for future requests\r\n  setAuthToken(false);\r\n  // Set current user to {} which will set isAuthenticated to false\r\n  dispatch(setCurrentUser({}));\r\n};\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\nexport const ADD_PRICE = \"ADD_PRICE\";\r\nexport const PROFILE_LOADING = \"PROFILE_LOADING\";\r\nexport const PROFILE_NOT_FOUND = \"PROFILE_NOT_FOUND\";\r\nexport const CLEAR_CURRENT_PROFILE = \"CLEAR_CURRENT_PROFILE\";\r\nexport const GET_PROFILES = \"GET_PROFILES\";\r\nexport const POST_LOADING = \"POST_LOADING\";\r\nexport const GET_POSTS = \"GET_POSTS\";\r\nexport const GET_POST = \"GET_POST\";\r\nexport const ADD_POST = \"ADD_POST\";\r\nexport const DELETE_POST = \"DELETE_POST\";\r\n","const isEmpty = value =>\r\n  value === undefined ||\r\n  value === null ||\r\n  (typeof value === 'object' && Object.keys(value).length === 0) ||\r\n  (typeof value === 'string' && value.trim().length === 0);\r\n\r\nexport default isEmpty;\r\n","import isEmpty from \"../validation/is-empty\";\r\n\r\nimport { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: !isEmpty(action.payload),\r\n        user: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_ERRORS, CLEAR_ERRORS } from '../actions/types';\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    case CLEAR_ERRORS:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { ADD_PRICE, GET_ERRORS, SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  price: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_PRICE:\r\n      return {\r\n        ...state,\r\n        profile: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport inputReducer from \"./inputReducer\";\r\n/* import profileReducer from \"./profileReducer\";\r\nimport postReducer from \"./postReducer\"; */\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  input: inputReducer,\r\n  errors: errorReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose /* pour devtool*/ } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n      window.__REDUX_DEVTOOLS_EXTENSION__() /* pour devtool*/\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\n\r\nclass Navbar extends Component {\r\n  onLogoutClick(e) {\r\n    e.preventDefault();\r\n    //this.props.clearCurrentProfile();\r\n    // this.props.history.push('/Landing');\r\n    this.props.logoutUser();\r\n  }\r\n\r\n  render() {\r\n    const { isAuthenticated, user } = this.props.auth;\r\n\r\n    const authlinks = (\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item dropdown\">\r\n          <Link\r\n            className=\"nav-link dropdown-toggle\"\r\n            to=\"#\"\r\n            id=\"navbarDropdownMenuLink1\"\r\n            role=\"button\"\r\n            data-toggle=\"dropdown\"\r\n            aria-haspopup=\"false\"\r\n            aria-expanded=\"true\"\r\n          >\r\n            Home\r\n          </Link>\r\n          <div\r\n            className=\"dropdown-menu\"\r\n            aria-labelledby=\"navbarDropdownMenuLink1\"\r\n          >\r\n            <Link className=\"dropdown-item\" to=\"/About\">\r\n              About Research\r\n            </Link>\r\n\r\n            <Link className=\"dropdown-item\" to=\"/Participation\">\r\n              Participation\r\n            </Link>\r\n            <Link className=\"dropdown-item\" to=\"/TetCs\">\r\n              T&amp;Cs\r\n            </Link>\r\n            <Link className=\"dropdown-item\" to=\"/Contacts\">\r\n              Contacts\r\n            </Link>\r\n          </div>\r\n        </li>\r\n\r\n        <li className=\"nav-item dropdown\">\r\n          <Link\r\n            className=\"nav-link dropdown-toggle\"\r\n            href=\"#\"\r\n            id=\"navbarDropdownMenuLink2\"\r\n            role=\"button\"\r\n            data-toggle=\"dropdown\"\r\n            aria-haspopup=\"true\"\r\n            aria-expanded=\"false\"\r\n          >\r\n            Participants\r\n          </Link>\r\n          <div\r\n            className=\"dropdown-menu\"\r\n            aria-labelledby=\"navbarDropdownMenuLink2\"\r\n          >\r\n            <Link className=\"dropdown-item\" to=\"/Register\">\r\n              Registration Page\r\n            </Link>\r\n            <Link className=\"dropdown-item\" to=\"/Information\">\r\n              Information Page\r\n            </Link>\r\n            <Link className=\"dropdown-item\" to=\"/CRanking\">\r\n              Copper Ranking\r\n            </Link>\r\n            <Link className=\"dropdown-item\" to=\"/GRanking\">\r\n              Gold Ranking\r\n            </Link>\r\n            <Link className=\"dropdown-item\" to=\"/RMethod\">\r\n              Ranking Method\r\n            </Link>\r\n            <Link className=\"dropdown-item\" to=\"/MonthPrices\">\r\n              Copper/Gold Prices input\r\n            </Link>\r\n          </div>\r\n        </li>\r\n\r\n        <li className=\"nav-item dropdown\">\r\n          <Link\r\n            className=\"nav-link dropdown-toggle\"\r\n            href=\"#\"\r\n            id=\"navbarDropdownMenuLink2\"\r\n            role=\"button\"\r\n            data-toggle=\"dropdown\"\r\n            aria-haspopup=\"true\"\r\n            aria-expanded=\"false\"\r\n          >\r\n            Inputs\r\n          </Link>\r\n          <div\r\n            className=\"dropdown-menu\"\r\n            aria-labelledby=\"navbarDropdownMenuLink2\"\r\n          >\r\n            <Link className=\"dropdown-item\" to=\"/Copperinput\">\r\n              Copper Input\r\n            </Link>\r\n            <Link className=\"dropdown-item\" to=\"/Goldinput\">\r\n              Gold Input\r\n            </Link>\r\n          </div>\r\n        </li>\r\n\r\n        <li className=\"nav-item dropdown\">\r\n          <Link\r\n            className=\"nav-link dropdown-toggle\"\r\n            href=\"#\"\r\n            id=\"navbarDropdownMenuLink2\"\r\n            role=\"button\"\r\n            data-toggle=\"dropdown\"\r\n            aria-haspopup=\"true\"\r\n            aria-expanded=\"false\"\r\n          >\r\n            Forecasts\r\n          </Link>\r\n          <div\r\n            className=\"dropdown-menu\"\r\n            aria-labelledby=\"navbarDropdownMenuLink2\"\r\n          >\r\n            <Link className=\"dropdown-item\" to=\"/CForecast\">\r\n              Copper Forecasts\r\n            </Link>\r\n            <Link className=\"dropdown-item\" to=\"/GForecast\">\r\n              Gold Forecasts\r\n            </Link>\r\n          </div>\r\n        </li>\r\n\r\n        <li className=\"nav-item dropdown\">\r\n          <Link\r\n            className=\"nav-link dropdown-toggle\"\r\n            href=\"#\"\r\n            id=\"navbarDropdownMenuLink3\"\r\n            role=\"button\"\r\n            data-toggle=\"dropdown\"\r\n            aria-haspopup=\"true\"\r\n            aria-expanded=\"false\"\r\n          >\r\n            Data\r\n          </Link>\r\n          <div\r\n            className=\"dropdown-menu\"\r\n            aria-labelledby=\"navbarDropdownMenuLink3\"\r\n          >\r\n            <Link className=\"dropdown-item\" to=\"/CData\">\r\n              Copper Data\r\n            </Link>\r\n            <Link className=\"dropdown-item\" to=\"/RetardKbp\">\r\n              Gold Data\r\n            </Link>\r\n          </div>\r\n        </li>\r\n\r\n        <li className=\"nav-item dropdown\">\r\n          <Link\r\n            className=\"nav-link dropdown-toggle\"\r\n            href=\"#\"\r\n            id=\"navbarDropdownMenuLink2\"\r\n            role=\"button\"\r\n            data-toggle=\"dropdown\"\r\n            aria-haspopup=\"true\"\r\n            aria-expanded=\"false\"\r\n          >\r\n            Documents archive\r\n          </Link>\r\n          <div\r\n            className=\"dropdown-menu\"\r\n            aria-labelledby=\"navbarDropdownMenuLink2\"\r\n          >\r\n            <Link className=\"dropdown-item\" to=\"/CForecast\">\r\n              Copper\r\n            </Link>\r\n            <Link className=\"dropdown-item\" to=\"/GForecast\">\r\n              Gold\r\n            </Link>\r\n          </div>\r\n        </li>\r\n\r\n        <li className=\"nav-item button-toggle\">\r\n          <button\r\n            className=\"btn btn-outline-secondary my-2 my-sm-0\"\r\n            onClick={this.onLogoutClick.bind(this)}\r\n          >\r\n            Logout\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    );\r\n\r\n    const nonauthlinks = <div></div>;\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark mb-4\">\r\n        <Link className=\"navnav-link\" to=\"/\">\r\n          COMMODITY FORECASTS\r\n        </Link>\r\n\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarNavDropdown\"\r\n          aria-controls=\"navbarNavDropdown\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div className=\"container\">\r\n          <div className=\"navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n            <div className=\"navbar-nav\">\r\n              {isAuthenticated ? authlinks : nonauthlinks}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nNavbar.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logoutUser })(Navbar);\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <footer className=\"bg-dark text-white mt-5 p-4 text-center\">\r\n      Copyright &copy; {new Date().getFullYear()} Africiel\r\n    </footer>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Landing extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"dark-overlay landing-inner text-light\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">Commodity Forecast</h1>\r\n                <p className=\"lead\"> Copper and Gold </p>\r\n                <hr />\r\n                <Link to=\"/register\" className=\"btn btn-lg btn-info mr-2\">\r\n                  Sign Up\r\n                </Link>\r\n                <Link to=\"/login\" className=\"btn btn-lg btn-light\">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Landing;\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TextFieldGroup = ({\r\n  name,\r\n  placeholder,\r\n  value,\r\n  label,\r\n  error,\r\n  info,\r\n  type,\r\n  onChange,\r\n  disabled\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <input\r\n        type={type}\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        disabled={disabled}\r\n      />\r\n      {info && <small className=\"form-text text-muted\">{info}</small>}\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextFieldGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n  value: PropTypes.string.isRequired,\r\n  info: PropTypes.string,\r\n  error: PropTypes.string,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  disabled: PropTypes.string\r\n};\r\n\r\nTextFieldGroup.defaultProps = {\r\n  type: 'text'\r\n};\r\n\r\nexport default TextFieldGroup;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../actions/authActions\";\r\n\r\nimport TextFieldGroup from \"../common/TextFieldGroup\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      email: \"\",\r\n      altemail: \"\",\r\n      realname: \"\",\r\n      commodity: \"\",\r\n      sex: \"\",\r\n      age: \"\",\r\n      geolocation: \"\",\r\n      background: \"\",\r\n      workplace: \"\",\r\n      forecastingapproach: \"\",\r\n      bio: \"\",\r\n\r\n      errors: {},\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      //  this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newUser = {\r\n      name: this.state.name,\r\n      password: this.state.password,\r\n      password2: this.state.password2,\r\n      email: this.state.email,\r\n      altemail: this.state.altemail,\r\n      realname: this.state.realname,\r\n      commodity: this.state.commodity,\r\n      sex: this.state.sex,\r\n      age: this.state.age,\r\n      geolocation: this.state.geolocation,\r\n      professionBackground: this.state.professionBackground,\r\n      workplace: this.state.workplace,\r\n      forecastingapproach: this.state.forecastingapproach,\r\n      bio: this.state.bio,\r\n    };\r\n\r\n    this.props.registerUser(newUser, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    const { user } = this.props.auth;\r\n    //equivalent à\r\n    //const user = this.props.auth.user;\r\n\r\n    return (\r\n      <div class=\"register\">\r\n        {/*user ? user.name : null*/}\r\n\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your account</p>\r\n              <form noValidate onSubmit={this.onSubmit}>\r\n                <TextFieldGroup\r\n                  placeholder=\"Name\"\r\n                  name=\"name\"\r\n                  value={this.state.name}\r\n                  onChange={this.onChange}\r\n                  error={errors.name}\r\n                />\r\n\r\n                <TextFieldGroup\r\n                  placeholder=\"Password\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  value={this.state.password}\r\n                  onChange={this.onChange}\r\n                  error={errors.password}\r\n                />\r\n                <TextFieldGroup\r\n                  placeholder=\"Confirm Password\"\r\n                  name=\"password2\"\r\n                  type=\"password\"\r\n                  value={this.state.password2}\r\n                  onChange={this.onChange}\r\n                  error={errors.password2}\r\n                />\r\n\r\n                <TextFieldGroup\r\n                  placeholder=\"Email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  value={this.state.email}\r\n                  onChange={this.onChange}\r\n                  error={errors.email}\r\n                  info=\"This site uses Gravatar so if you want a profile image, use a Gravatar email\"\r\n                />\r\n\r\n                <TextFieldGroup\r\n                  placeholder=\"Alternative email (Optional)\"\r\n                  name=\"altemail\"\r\n                  type=\"email\"\r\n                  value={this.state.altemail}\r\n                  onChange={this.onChange}\r\n                  error={errors.altemail}\r\n                />\r\n\r\n                <TextFieldGroup\r\n                  placeholder=\"Real Name (For official communication only)\"\r\n                  name=\"realname\"\r\n                  type=\"text\"\r\n                  value={this.state.realname}\r\n                  onChange={this.onChange}\r\n                  error={errors.realname}\r\n                />\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    name=\"commodity\"\r\n                    value={this.state.commodity}\r\n                    onChange={this.onChange}\r\n                    error={errors.commodity}\r\n                    className=\"form-control form-control-lg\"\r\n                  >\r\n                    <option value=\"\">--Commodity forecasting--</option>\r\n                    <option value=\"Copper\">Copper</option>\r\n                    <option value=\"Gold\">Gold</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    name=\"sex\"\r\n                    value={this.state.sex}\r\n                    onChange={this.onChange}\r\n                    error={errors.sex}\r\n                    className=\"form-control form-control-lg\"\r\n                  >\r\n                    <option value=\"\">--Sex (Optional)--</option>\r\n                    <option value=\"Male\">Male</option>\r\n                    <option value=\"Female\">Female</option>\r\n                    <option value=\"Blank\">Blank</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    name=\"age\"\r\n                    value={this.state.age}\r\n                    onChange={this.onChange}\r\n                    error={errors.age}\r\n                    className=\"form-control form-control-lg\"\r\n                  >\r\n                    <option value=\"\">--Age (Years) --</option>\r\n                    <option value=\"<25\">&lt; 25 </option>\r\n                    <option value=\"25-35\">25-35</option>\r\n                    <option value=\"35-45\">35-45</option>\r\n                    <option value=\"45-55\">45-55</option>\r\n                    <option value=\"55-65\">55-65</option>\r\n                    <option value=\">65\">&gt;65</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    name=\"geolocation\"\r\n                    value={this.state.geolocation}\r\n                    onChange={this.onChange}\r\n                    error={errors.geolocation}\r\n                    className=\"form-control form-control-lg\"\r\n                  >\r\n                    <option value=\"\">--Geographic location --</option>\r\n                    <option value=\"Africa\">Africa</option>\r\n                    <option value=\"Asia\">Asia</option>\r\n                    <option value=\"Australia\">Australia</option>\r\n                    <option value=\"Europe\">North America</option>\r\n                    <option value=\"South America\">Sout America</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    name=\"professionBackground\"\r\n                    value={this.state.professionBackground}\r\n                    onChange={this.onChange}\r\n                    error={errors.professionBackground}\r\n                    className=\"form-control form-control-lg\"\r\n                  >\r\n                    <option value=\"\">--Professional Background --</option>\r\n                    <option value=\"Financial\">Financial</option>\r\n                    <option value=\"HR\">HR</option>\r\n                    <option value=\"Journalism\">Journalism</option>\r\n                    <option value=\"Legal\">Legal</option>\r\n                    <option value=\"Technical\">Technical</option>\r\n                    <option value=\"Other\">Other</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    name=\"workplace\"\r\n                    value={this.state.workplace}\r\n                    onChange={this.onChange}\r\n                    error={errors.workplace}\r\n                    className=\"form-control form-control-lg\"\r\n                  >\r\n                    <option value=\"\">--Workplace--</option>\r\n                    <option value=\"Academic\">Academic</option>\r\n                    <option value=\"Consultancy\">Consultancy</option>\r\n                    <option value=\"Financial institution\">\r\n                      Financial institution\r\n                    </option>\r\n                    <option value=\"Mining organization\">\r\n                      Mining organization\r\n                    </option>\r\n                    <option value=\"Technical services\">\r\n                      Technical services\r\n                    </option>\r\n                    <option value=\"Research organization\">\r\n                      Research organization\r\n                    </option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    name=\"forecastingapproach\"\r\n                    value={this.state.forecastingapproach}\r\n                    onChange={this.onChange}\r\n                    error={errors.forecastingapproach}\r\n                    className=\"form-control form-control-lg\"\r\n                  >\r\n                    <option value=\"\">--Forecasting approach--</option>\r\n                    <option value=\"Econometric modeling\">\r\n                      Econometric modeling\r\n                    </option>\r\n                    <option value=\"Fundamental analysis\">\r\n                      Fundamental analysis\r\n                    </option>\r\n                    <option value=\"Futures prices\">Futures prices</option>\r\n                    <option value=\"Historical averages\">\r\n                      Historical averages\r\n                    </option>\r\n                    <option value=\"Research organization\">\r\n                      Research organization\r\n                    </option>\r\n                    <option value=\"Technical analysis\">\r\n                      Technical analysis\r\n                    </option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    placeholder=\"Short Bio\"\r\n                    name=\"bio\"\r\n                    type=\"textarea\"\r\n                    value={this.state.bio}\r\n                    onChange={this.onChange}\r\n                    error={errors.bio}\r\n                    className=\"form-control form-control-lg\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <table className=\"table table-bordered\">\r\n                    <thead>\r\n                      <tr>\r\n                        <td colspan=\"2\">PARTICIPANT CONSENT TERMS</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Consent questions</td>\r\n                        <td>yes/no</td>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr>\r\n                        <td>\r\n                          I confirm that I have read and have understood the\r\n                          Participant Information Page for this study. I have\r\n                          had the opportunity to consider the information, ask\r\n                          questions, and have had these answered satisfactorily.\r\n                        </td>\r\n                        <td>\r\n                          <div className=\"radio\">\r\n                            <label>\r\n                              <input\r\n                                type=\"radio\"\r\n                                name=\"question1\"\r\n                                id=\"y1\"\r\n                                value=\"yes\"\r\n                              />\r\n                              yes\r\n                            </label>\r\n                          </div>\r\n                          <div class=\"answ\">\r\n                            <label for=\"n1\">\r\n                              <input\r\n                                type=\"radio\"\r\n                                name=\"question1\"\r\n                                id=\"n1\"\r\n                                value=\"no\"\r\n                              />\r\n                              no\r\n                            </label>\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.prototypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { registerUser })(Register);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport TextFieldGroup from \"../common/TextFieldGroup\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      errors: {},\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const userData = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n\r\n    this.props.loginUser(userData);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <p className=\"lead text-center\">\r\n                Sign in to your Commodity Forecast account\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <TextFieldGroup\r\n                  placeholder=\"Email Address\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  value={this.state.email}\r\n                  onChange={this.onChange}\r\n                  error={errors.email}\r\n                />\r\n\r\n                <TextFieldGroup\r\n                  placeholder=\"Password\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  value={this.state.password}\r\n                  onChange={this.onChange}\r\n                  error={errors.password}\r\n                />\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loginUser })(Login);\r\n","import React, { Component } from \"react\";\r\n\r\nclass Consent extends Component {\r\n  render() {\r\n    return (\r\n      <body>\r\n        <table className=\"table table-bordered table-hover\">\r\n          <thead className=\"thead-dark\">\r\n            <tr>\r\n              <td colspan=\"2\">PARTICIPANT CONSENT TERMS</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Consent questions</td>\r\n              <td>yes/no</td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n                I confirm that I have read and have understood the Participant\r\n                Information Page for this study. I have had the opportunity to\r\n                consider the information, ask questions, and have had these\r\n                answered satisfactorily.\r\n              </td>\r\n              <td>\r\n                <div className=\"radio\">\r\n                  <label>\r\n                    <input type=\"radio\" name=\"question1\" id=\"y1\" value=\"yes\" />\r\n                    yes\r\n                  </label>\r\n                </div>\r\n                <div class=\"answ\">\r\n                  <label for=\"n1\">\r\n                    <input type=\"radio\" name=\"question1\" id=\"n1\" value=\"no\" />\r\n                    no\r\n                  </label>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>\r\n                I confirm part of my skill set is preparing and/or using\r\n                longer-term commodity price forecasts, and it is an expected\r\n                requirement to be accepted on to the survey panel for this\r\n                research project. Please check the appropriate box alongside. If\r\n                you do not meet the skill requirement, please decline the\r\n                opportunity to participate in this research project.\r\n              </td>\r\n              <td>\r\n                <div className=\"radio\">\r\n                  <label>\r\n                    <input type=\"radio\" name=\"question2\" id=\"y2\" value=\"yes\" />\r\n                    yes\r\n                  </label>\r\n                </div>\r\n                <div class=\"answ\">\r\n                  <label for=\"n2\">\r\n                    <input type=\"radio\" name=\"question2\" id=\"n2\" value=\"no\" />\r\n                    no\r\n                  </label>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>\r\n                I understand that my participation is voluntary and that I am\r\n                free to withdraw at any time without giving any reason, without\r\n                my rights being affected. In addition, should I not wish to\r\n                answer any question or questions, I am free to decline.\r\n              </td>\r\n              <td>\r\n                <div className=\"radio\">\r\n                  <label>\r\n                    <input type=\"radio\" name=\"question3\" id=\"y3\" value=\"yes\" />\r\n                    yes\r\n                  </label>\r\n                </div>\r\n                <div class=\"answ\">\r\n                  <label for=\"n3\">\r\n                    <input type=\"radio\" name=\"question3\" id=\"n3\" value=\"no\" />\r\n                    no\r\n                  </label>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>\r\n                I understand that, under the Data Protection Act, I can at any\r\n                time ask for access to the information I provide, and I can also\r\n                request the destruction of that information if I wish.\r\n              </td>\r\n              <td>\r\n                <div className=\"radio\">\r\n                  <label>\r\n                    <input type=\"radio\" name=\"question4\" id=\"y4\" value=\"yes\" />\r\n                    yes\r\n                  </label>\r\n                </div>\r\n                <div class=\"answ\">\r\n                  <label for=\"n4\">\r\n                    <input type=\"radio\" name=\"question4\" id=\"n3\" value=\"no\" />\r\n                    no\r\n                  </label>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>\r\n                The information you have submitted will be published as a\r\n                report; please indicate whether you would like to receive an\r\n                electronic copy of the research report.\r\n              </td>\r\n              <td>\r\n                <div className=\"radio\">\r\n                  <label>\r\n                    <input type=\"radio\" name=\"question5\" id=\"y5\" value=\"yes\" />\r\n                    yes\r\n                  </label>\r\n                </div>\r\n                <div class=\"answ\">\r\n                  <label for=\"n5\">\r\n                    <input type=\"radio\" name=\"question5\" id=\"n3\" value=\"no\" />\r\n                    no\r\n                  </label>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>\r\n                I understand that confidentiality and anonymity will be\r\n                maintained, and it will not be possible to identify me in any\r\n                publications.\r\n              </td>\r\n              <td>\r\n                <div className=\"radio\">\r\n                  <label>\r\n                    <input type=\"radio\" name=\"question6\" id=\"y6\" value=\"yes\" />\r\n                    yes\r\n                  </label>\r\n                </div>\r\n                <div class=\"answ\">\r\n                  <label for=\"n6\">\r\n                    <input type=\"radio\" name=\"question6\" id=\"n6\" value=\"no\" />\r\n                    no\r\n                  </label>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>\r\n                I agree for the data collected from me to be used in future\r\n                research and understand that any such use of identifiable data\r\n                would be reviewed and approved by a research ethics committee.\r\n              </td>\r\n              <td>\r\n                <div className=\"radio\">\r\n                  <label>\r\n                    <input type=\"radio\" name=\"question7\" id=\"y7\" value=\"yes\" />\r\n                    yes\r\n                  </label>\r\n                </div>\r\n                <div class=\"answ\">\r\n                  <label for=\"n7\">\r\n                    <input type=\"radio\" name=\"question7\" id=\"n7\" value=\"no\" />\r\n                    no\r\n                  </label>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>\r\n                I understand and agree that my participation will be\r\n                recorded/captured. I am aware of and consent to your use of this\r\n                recorded information for the purpose of data analysis.\r\n              </td>\r\n              <td>\r\n                <div className=\"radio\">\r\n                  <label>\r\n                    <input type=\"radio\" name=\"question8\" id=\"y8\" value=\"yes\" />\r\n                    yes\r\n                  </label>\r\n                </div>\r\n                <div class=\"answ\">\r\n                  <label for=\"n8\">\r\n                    <input type=\"radio\" name=\"question8\" id=\"n8\" value=\"no\" />\r\n                    no\r\n                  </label>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>\r\n                I agree with the data collected from me to be used in other\r\n                relevant future research.\r\n              </td>\r\n              <td>\r\n                <div className=\"radio\">\r\n                  <label>\r\n                    <input type=\"radio\" name=\"question9\" id=\"y9\" value=\"yes\" />\r\n                    yes\r\n                  </label>\r\n                </div>\r\n                <div class=\"answ\">\r\n                  <label for=\"n9\">\r\n                    <input type=\"radio\" name=\"question9\" id=\"n9\" value=\"no\" />\r\n                    no\r\n                  </label>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>\r\n                I understand that my responses will be kept strictly\r\n                confidential. I give permission for members of the research team\r\n                to have access to my anonymized responses. I understand that my\r\n                name will not be linked with the research materials, and I will\r\n                not be identified or identifiable in the report or reports that\r\n                result from the research.\r\n              </td>\r\n              <td>\r\n                <div className=\"radio\">\r\n                  <label>\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"question10\"\r\n                      id=\"y10\"\r\n                      value=\"yes\"\r\n                    />\r\n                    yes\r\n                  </label>\r\n                </div>\r\n                <div class=\"answ\">\r\n                  <label for=\"n10\">\r\n                    <input type=\"radio\" name=\"question10\" id=\"n10\" value=\"no\" />\r\n                    no\r\n                  </label>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>\r\n                I understand the purpose of the study is to investigate\r\n                commodity price forecasting and specifically acknowledge the\r\n                intention of the research is not to provide any trading or\r\n                financial recommendation on future commodity price levels. Any\r\n                inferences drawn or made about future commodity prices because\r\n                of participating in the research are solely mine, and I take\r\n                full responsibility for any actions I may take stemming from\r\n                such expectations.\r\n              </td>\r\n              <td>\r\n                <div className=\"radio\">\r\n                  <label>\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"question11\"\r\n                      id=\"y11\"\r\n                      value=\"yes\"\r\n                    />\r\n                    yes\r\n                  </label>\r\n                </div>\r\n                <div class=\"answ\">\r\n                  <label for=\"n11\">\r\n                    <input type=\"radio\" name=\"question11\" id=\"n11\" value=\"no\" />\r\n                    no\r\n                  </label>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>I agree to take part in the this study.</td>\r\n              <td>\r\n                <div className=\"radio\">\r\n                  <label>\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"question12\"\r\n                      id=\"y12\"\r\n                      value=\"yes\"\r\n                    />\r\n                    yes\r\n                  </label>\r\n                </div>\r\n                <div class=\"answ\">\r\n                  <label for=\"n12\">\r\n                    <input type=\"radio\" name=\"question12\" id=\"n12\" value=\"no\" />\r\n                    no\r\n                  </label>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </body>\r\n    );\r\n  }\r\n}\r\nexport default Consent;\r\n","import React, { Component } from \"react\";\r\n\r\nclass MonthForecast extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <table className=\"table table-bordered\">\r\n          <tr>\r\n            <td colSpan=\"24\">\r\n              <b>Current: Copper - June 2020 Forecasts</b>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>Cu participant1</td>\r\n            <td>5045</td>\r\n            <td>5050</td>\r\n            <td>12%</td>\r\n            <td>14%</td>\r\n            <td>52%</td>\r\n            <td>4%</td>\r\n            <td>8%</td>\r\n            <td>12%</td>\r\n            <td>1%</td>\r\n            <td>7%</td>\r\n            <td>5%</td>\r\n            <td>CuParticpent Comment</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Cu participant</td>\r\n            <td>5045</td>\r\n            <td>5050</td>\r\n            <td>7%</td>\r\n            <td>9%</td>\r\n            <td>14%</td>\r\n            <td>9%</td>\r\n            <td>45%</td>\r\n            <td>10%</td>\r\n            <td>5%</td>\r\n            <td>2%</td>\r\n            <td>4%</td>\r\n            <td>CuParticpent Comment</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Cu participant</td>\r\n            <td>5045</td>\r\n            <td>5050</td>\r\n            <td>4%</td>\r\n            <td>12%</td>\r\n            <td>25%</td>\r\n            <td>3%</td>\r\n            <td>9%</td>\r\n            <td>10%</td>\r\n            <td>6%</td>\r\n            <td>31%</td>\r\n            <td>22%</td>\r\n            <td>CuParticpent Comment</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Cu participant</td>\r\n            <td>5045</td>\r\n            <td>5050</td>\r\n            <td>4%</td>\r\n            <td>5%</td>\r\n            <td>6%</td>\r\n            <td>9%</td>\r\n            <td>10%</td>\r\n            <td>25%</td>\r\n            <td>14%</td>\r\n            <td>5%</td>\r\n            <td>1%</td>\r\n            <td>CuParticpent Comment</td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default MonthForecast;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport MonthForecast from \"./MonthForecast\";\r\n\r\nclass CopperInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      commodity: \"\",\r\n      month: \"\",\r\n      user: \"\",\r\n      priceAvr: \"\",\r\n      price1: \"\",\r\n      price2: \"\",\r\n      price3: \"\",\r\n      price4: \"\",\r\n      price5: \"\",\r\n      price6: \"\",\r\n      price7: \"\",\r\n      price8: \"\",\r\n      price9: \"\",\r\n      percent1: \"\",\r\n      percent2: \"\",\r\n      percent3: \"\",\r\n      percent4: \"\",\r\n      percent5: \"\",\r\n      percent6: \"\",\r\n      percent7: \"\",\r\n      percent8: \"\",\r\n      percent9: \"\",\r\n      justif: \"\",\r\n      generalcomments: \"\",\r\n      specificComments: \"\",\r\n      comments: \"\",\r\n      totpercent: \"\",\r\n      months: [\r\n        \"January\",\r\n        \"February\",\r\n        \"March\",\r\n        \"April\",\r\n        \"May\",\r\n        \"June\",\r\n        \"July\",\r\n        \"August\",\r\n        \"September\",\r\n        \"October\",\r\n        \"November\",\r\n        \"December\",\r\n      ],\r\n      foreprices: [8],\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newEntry = {\r\n      commodity: this.state.commodity,\r\n      month: this.state.month,\r\n      user: this.state.user,\r\n      priceAvr: this.state.priceAvr,\r\n      price1: this.state.price1,\r\n      price2: this.state.price2,\r\n      price3: this.state.price3,\r\n      price4: this.state.price4,\r\n      price5: this.state.price5,\r\n      price6: this.state.price6,\r\n      price7: this.state.price7,\r\n      price8: this.state.price8,\r\n      price9: this.state.price9,\r\n\r\n      justif: this.state.justif,\r\n      comments: this.state.comments,\r\n    };\r\n\r\n    //this.props.saveInput(newEntry, this.props.history);\r\n    console.log(\"ok\");\r\n    axios\r\n      .post(\"/api/cinput/enregistrer\", newEntry)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n      })\r\n      .catch((err) => this.setState({ errors: err.response.data }));\r\n  }\r\n\r\n  fillPrices(sanza) {\r\n    this.setState({ price1: \"\" });\r\n    this.setState({ price2: \"\" });\r\n    this.setState({ price3: \"\" });\r\n    this.setState({ price4: \"\" });\r\n    this.setState({ price5: \"\" });\r\n    this.setState({ price6: \"\" });\r\n    this.setState({ price7: \"\" });\r\n    this.setState({ price8: \"\" });\r\n    this.setState({ price9: \"\" });\r\n\r\n    fetch(\"/api/beyi/commois/\" + sanza + \"&Copper\")\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        let yx = data;\r\n\r\n        console.log(yx);\r\n\r\n        let talo = data.map((mutengo) => {\r\n          //put it in array\r\n          this.setState({ price1: mutengo.floorprice + mutengo.constant1 * 0 });\r\n          this.setState({ price2: mutengo.floorprice + mutengo.constant1 * 1 });\r\n          this.setState({ price3: mutengo.floorprice + mutengo.constant1 * 2 });\r\n          this.setState({ price4: mutengo.floorprice + mutengo.constant1 * 3 });\r\n          this.setState({ price5: mutengo.floorprice + mutengo.constant1 * 4 });\r\n          this.setState({ price6: mutengo.floorprice + mutengo.constant1 * 5 });\r\n          this.setState({ price7: mutengo.floorprice + mutengo.constant1 * 6 });\r\n          this.setState({ price8: mutengo.floorprice + mutengo.constant1 * 7 });\r\n          this.setState({ price9: mutengo.floorprice + mutengo.constant1 * 8 });\r\n          return {\r\n            id: mutengo._id,\r\n          };\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  CalculPondere(vraipourcent, indice) {\r\n    this.setState({ priceAvr: \"\" });\r\n    let Moyenne =\r\n      this.state.price1 * (indice == 1 ? vraipourcent : this.state.percent1) +\r\n      this.state.price2 * (indice == 2 ? vraipourcent : this.state.percent2) +\r\n      this.state.price3 * (indice == 3 ? vraipourcent : this.state.percent3) +\r\n      this.state.price4 * (indice == 4 ? vraipourcent : this.state.percent4) +\r\n      this.state.price5 * (indice == 5 ? vraipourcent : this.state.percent5) +\r\n      this.state.price6 * (indice == 6 ? vraipourcent : this.state.percent6) +\r\n      this.state.price7 * (indice == 7 ? vraipourcent : this.state.percent7) +\r\n      this.state.price8 * (indice == 8 ? vraipourcent : this.state.percent8) +\r\n      this.state.price9 * (indice == 9 ? vraipourcent : this.state.percent9);\r\n    this.setState({ priceAvr: Moyenne });\r\n  }\r\n\r\n  TotalPourcent(vraipourcent1, indice1) {\r\n    this.setState({ totpercent: \"\" });\r\n    let tot =\r\n      (indice1 == 1 ? vraipourcent1 : this.state.percent1) * 100 +\r\n      (indice1 == 2 ? vraipourcent1 : this.state.percent2) * 100 +\r\n      (indice1 == 3 ? vraipourcent1 : this.state.percent3) * 100 +\r\n      (indice1 == 4 ? vraipourcent1 : this.state.percent4) * 100 +\r\n      (indice1 == 5 ? vraipourcent1 : this.state.percent5) * 100 +\r\n      (indice1 == 6 ? vraipourcent1 : this.state.percent6) * 100 +\r\n      (indice1 == 7 ? vraipourcent1 : this.state.percent7) * 100 +\r\n      (indice1 == 8 ? vraipourcent1 : this.state.percent8) * 100 +\r\n      (indice1 == 9 ? vraipourcent1 : this.state.percent9) * 100;\r\n    console.log(indice1);\r\n    console.log((indice1 == 1 ? vraipourcent1 : this.state.percent1) * 100);\r\n    console.log((indice1 == 2 ? vraipourcent1 : this.state.percent2) * 100);\r\n    this.setState({ totpercent: tot });\r\n  }\r\n  render() {\r\n    const { user } = this.props.auth;\r\n    return (\r\n      <div>\r\n        <form noValidate onSubmit={this.onSubmit}>\r\n          <table className=\"table table-bordered\" style={{ width: \"75%\" }}>\r\n            <tr>\r\n              <td colSpan=\"12\">\r\n                <b>\r\n                  Consensus Commodity Price Forecasting Deliberation Panel -\r\n                  Copper Input Sheet{\" \"}\r\n                </b>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"first\">\r\n                <label for=\"cmdt\">Commodity</label>\r\n              </td>\r\n              <td>\r\n                <b>Copper</b>\r\n              </td>\r\n              <td className=\"instruction\" rowSpan=\"3\" colSpan=\"11\">\r\n                <b>Instructions</b>:{\" \"}\r\n                <i>\r\n                  Please select a month on the Left for which you want to make a\r\n                  commodity price forecast. Once the month has been selected,\r\n                  please allocate the expected probability you would assign to\r\n                  the indicated price baskets below, such that the total\r\n                  probabilities sums to 100%. It would be greatly appreciated if\r\n                  you could also provide an indication of the basis for your\r\n                  commodity price forecast in the text box at the beneath the\r\n                  forecast probability table. Based on the combined inputs of\r\n                  all panel participants, a consensus commodity price forecast\r\n                  has been computed, please feel free to comment on the result\r\n                  relative to your views and other participants if you chose.\r\n                </i>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"first\">\r\n                <label for=\"mnth\">Month</label>\r\n              </td>\r\n              <td>\r\n                <select\r\n                  id=\"mnth\"\r\n                  name=\"month\"\r\n                  value={this.state.month}\r\n                  onChange={(e) => {\r\n                    this.setState({\r\n                      month: e.target.value,\r\n                      validationError:\r\n                        e.target.value === \"\" ? \"Select a month\" : \"\",\r\n                    });\r\n                    this.fillPrices(e.target.value);\r\n                  }}\r\n                >\r\n                  <option value=\"\">-- Select a month --</option>\r\n                  {this.state.months\r\n                    .slice(new Date().getMonth(), 12)\r\n                    .map((lemois) => (\r\n                      <option key={lemois.value} value={lemois.value}>\r\n                        {lemois + \" \" + new Date().getFullYear()}\r\n                      </option>\r\n                    ))}\r\n                </select>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"first\">\r\n                <label for=\"cUserN\">Copper Username</label>\r\n              </td>\r\n              <td>\r\n                <h3>{user.name}</h3>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"first\">Forecast price</td>\r\n              <td>\r\n                Copper{\" \"}\r\n                {/*this.state.months[new Date().getMonth()]*/ this.state.month}\r\n              </td>\r\n              <td id=\"avrg\">{this.state.priceAvr}</td>\r\n              <td id=\"\"> {this.state.price1} </td>\r\n              <td id=\"\">{this.state.price2}</td>\r\n              <td id=\"\">{this.state.price3}</td>\r\n              <td id=\"\">{this.state.price4}</td>\r\n              <td id=\"\">{this.state.price5}</td>\r\n              <td id=\"\">{this.state.price6}</td>\r\n              <td id=\"\">{this.state.price7}</td>\r\n              <td id=\"\">{this.state.price8}</td>\r\n              <td id=\"\">{this.state.price9}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"first\">Forecast estimate</td>\r\n              <td>NB: total must equal 100%</td>\r\n              <td id=\"sum_percent\">{this.state.totpercent} %</td>\r\n              <td id=\"\">\r\n                <select\r\n                  className=\"percent\"\r\n                  name=\"percent1\"\r\n                  value={this.state.percent1}\r\n                  onChange={(e) => {\r\n                    this.setState({\r\n                      percent1: e.target.value,\r\n                      validationError:\r\n                        e.target.value === \"\" ? \"vous devez \" : \"\",\r\n                    });\r\n                    this.CalculPondere(e.target.value, 1);\r\n                    this.TotalPourcent(e.target.value, 1);\r\n                  }}\r\n                >\r\n                    <option value=\"0\"> 0%</option>\r\n                    <option value=\"0.05\"> 5%</option>\r\n                    <option value=\"0.10\"> 10%</option>\r\n                    <option value=\"0.15\"> 15%</option>\r\n                    <option value=\"0.20\"> 20%</option>\r\n                    <option value=\"0.25\"> 25%</option>\r\n                    <option value=\"0.30\"> 30%</option>\r\n                    <option value=\"0.35\"> 35%</option>\r\n                    <option value=\"0.40\"> 40%</option>\r\n                    <option value=\"0.45\"> 55%</option>\r\n                    <option value=\"0.50\"> 50%</option>\r\n                    <option value=\"0.55\"> 55%</option>\r\n                    <option value=\"0.60\"> 60%</option>\r\n                    <option value=\"0.65\"> 65%</option>\r\n                    <option value=\"0.70\"> 70%</option>\r\n                    <option value=\"0.75\"> 75%</option>\r\n                    <option value=\"0.80\"> 80%</option>\r\n                    <option value=\"0.85\"> 85%</option>\r\n                    <option value=\"0.90\"> 90%</option>\r\n                    <option value=\"0.95\"> 95%</option>\r\n                    <option value=\"1\">100%</option>\r\n                </select>\r\n              </td>\r\n              <td id=\"\">\r\n                <select\r\n                  className=\"percent\"\r\n                  name=\"percent2\"\r\n                  value={this.state.percent2}\r\n                  onChange={(e) => {\r\n                    this.setState({\r\n                      percent2: e.target.value,\r\n                      validationError:\r\n                        e.target.value === \"\"\r\n                          ? \"vous devez sélectionner le truck\"\r\n                          : \"\",\r\n                    });\r\n                    this.CalculPondere(e.target.value, 2);\r\n                    this.TotalPourcent(e.target.value, 2);\r\n                  }}\r\n                >\r\n                    <option value=\"0\"> 0%</option>\r\n                    <option value=\"0.05\"> 5%</option>\r\n                    <option value=\"0.10\"> 10%</option>\r\n                    <option value=\"0.15\"> 15%</option>\r\n                    <option value=\"0.20\"> 20%</option>\r\n                    <option value=\"0.25\"> 25%</option>\r\n                    <option value=\"0.30\"> 30%</option>\r\n                    <option value=\"0.35\"> 35%</option>\r\n                    <option value=\"0.40\"> 40%</option>\r\n                    <option value=\"0.45\"> 55%</option>\r\n                    <option value=\"0.50\"> 50%</option>\r\n                    <option value=\"0.55\"> 55%</option>\r\n                    <option value=\"0.60\"> 60%</option>\r\n                    <option value=\"0.65\"> 65%</option>\r\n                    <option value=\"0.70\"> 70%</option>\r\n                    <option value=\"0.75\"> 75%</option>\r\n                    <option value=\"0.80\"> 80%</option>\r\n                    <option value=\"0.85\"> 85%</option>\r\n                    <option value=\"0.90\"> 90%</option>\r\n                    <option value=\"0.95\"> 95%</option>\r\n                    <option value=\"1\">100%</option>\r\n                </select>\r\n              </td>\r\n              <td id=\"\">\r\n                <select\r\n                  className=\"percent\"\r\n                  name=\"percent3\"\r\n                  value={this.state.percent3}\r\n                  onChange={(e) => {\r\n                    this.setState({\r\n                      percent3: e.target.value,\r\n                      validationError:\r\n                        e.target.value === \"\"\r\n                          ? \"vous devez sélectionner le truck\"\r\n                          : \"\",\r\n                    });\r\n                    this.CalculPondere(e.target.value, 3);\r\n                    this.TotalPourcent(e.target.value, 3);\r\n                  }}\r\n                >\r\n                    <option value=\"0\"> 0%</option>\r\n                    <option value=\"0.05\"> 5%</option>\r\n                    <option value=\"0.10\"> 10%</option>\r\n                    <option value=\"0.15\"> 15%</option>\r\n                    <option value=\"0.20\"> 20%</option>\r\n                    <option value=\"0.25\"> 25%</option>\r\n                    <option value=\"0.30\"> 30%</option>\r\n                    <option value=\"0.35\"> 35%</option>\r\n                    <option value=\"0.40\"> 40%</option>\r\n                    <option value=\"0.45\"> 55%</option>\r\n                    <option value=\"0.50\"> 50%</option>\r\n                    <option value=\"0.55\"> 55%</option>\r\n                    <option value=\"0.60\"> 60%</option>\r\n                    <option value=\"0.65\"> 65%</option>\r\n                    <option value=\"0.70\"> 70%</option>\r\n                    <option value=\"0.75\"> 75%</option>\r\n                    <option value=\"0.80\"> 80%</option>\r\n                    <option value=\"0.85\"> 85%</option>\r\n                    <option value=\"0.90\"> 90%</option>\r\n                    <option value=\"0.95\"> 95%</option>\r\n                    <option value=\"1\">100%</option>\r\n                </select>\r\n              </td>\r\n              <td id=\"\">\r\n                <select\r\n                  className=\"percent\"\r\n                  name=\"percent4\"\r\n                  value={this.state.percent4}\r\n                  onChange={(e) => {\r\n                    this.setState({\r\n                      percent4: e.target.value,\r\n                      validationError:\r\n                        e.target.value === \"\"\r\n                          ? \"vous devez sélectionner le truck\"\r\n                          : \"\",\r\n                    });\r\n                    this.CalculPondere(e.target.value, 4);\r\n                    this.TotalPourcent(e.target.value, 4);\r\n                  }}\r\n                >\r\n                    <option value=\"0\"> 0%</option>\r\n                    <option value=\"0.05\"> 5%</option>\r\n                    <option value=\"0.10\"> 10%</option>\r\n                    <option value=\"0.15\"> 15%</option>\r\n                    <option value=\"0.20\"> 20%</option>\r\n                    <option value=\"0.25\"> 25%</option>\r\n                    <option value=\"0.30\"> 30%</option>\r\n                    <option value=\"0.35\"> 35%</option>\r\n                    <option value=\"0.40\"> 40%</option>\r\n                    <option value=\"0.45\"> 55%</option>\r\n                    <option value=\"0.50\"> 50%</option>\r\n                    <option value=\"0.55\"> 55%</option>\r\n                    <option value=\"0.60\"> 60%</option>\r\n                    <option value=\"0.65\"> 65%</option>\r\n                    <option value=\"0.70\"> 70%</option>\r\n                    <option value=\"0.75\"> 75%</option>\r\n                    <option value=\"0.80\"> 80%</option>\r\n                    <option value=\"0.85\"> 85%</option>\r\n                    <option value=\"0.90\"> 90%</option>\r\n                    <option value=\"0.95\"> 95%</option>\r\n                    <option value=\"1\">100%</option>\r\n                </select>\r\n              </td>\r\n              <td id=\"\">\r\n                <select\r\n                  className=\"percent\"\r\n                  name=\"percent5\"\r\n                  value={this.state.percent5}\r\n                  onChange={(e) => {\r\n                    this.setState({\r\n                      percent5: e.target.value,\r\n                      validationError:\r\n                        e.target.value === \"\"\r\n                          ? \"vous devez sélectionner le truck\"\r\n                          : \"\",\r\n                    });\r\n                    this.CalculPondere(e.target.value, 5);\r\n                    this.TotalPourcent(e.target.value, 5);\r\n                  }}\r\n                >\r\n                    <option value=\"0\"> 0%</option>\r\n                    <option value=\"0.05\"> 5%</option>\r\n                    <option value=\"0.10\"> 10%</option>\r\n                    <option value=\"0.15\"> 15%</option>\r\n                    <option value=\"0.20\"> 20%</option>\r\n                    <option value=\"0.25\"> 25%</option>\r\n                    <option value=\"0.30\"> 30%</option>\r\n                    <option value=\"0.35\"> 35%</option>\r\n                    <option value=\"0.40\"> 40%</option>\r\n                    <option value=\"0.45\"> 55%</option>\r\n                    <option value=\"0.50\"> 50%</option>\r\n                    <option value=\"0.55\"> 55%</option>\r\n                    <option value=\"0.60\"> 60%</option>\r\n                    <option value=\"0.65\"> 65%</option>\r\n                    <option value=\"0.70\"> 70%</option>\r\n                    <option value=\"0.75\"> 75%</option>\r\n                    <option value=\"0.80\"> 80%</option>\r\n                    <option value=\"0.85\"> 85%</option>\r\n                    <option value=\"0.90\"> 90%</option>\r\n                    <option value=\"0.95\"> 95%</option>\r\n                    <option value=\"1\">100%</option>\r\n                </select>\r\n              </td>\r\n              <td id=\"\">\r\n                <select\r\n                  className=\"percent\"\r\n                  name=\"percent6\"\r\n                  value={this.state.percent6}\r\n                  onChange={(e) => {\r\n                    this.setState({\r\n                      percent6: e.target.value,\r\n                      validationError:\r\n                        e.target.value === \"\"\r\n                          ? \"vous devez sélectionner le truck\"\r\n                          : \"\",\r\n                    });\r\n                    this.CalculPondere(e.target.value, 6);\r\n                    this.TotalPourcent(e.target.value, 6);\r\n                  }}\r\n                >\r\n                    <option value=\"0\"> 0%</option>\r\n                    <option value=\"0.05\"> 5%</option>\r\n                    <option value=\"0.10\"> 10%</option>\r\n                    <option value=\"0.15\"> 15%</option>\r\n                    <option value=\"0.20\"> 20%</option>\r\n                    <option value=\"0.25\"> 25%</option>\r\n                    <option value=\"0.30\"> 30%</option>\r\n                    <option value=\"0.35\"> 35%</option>\r\n                    <option value=\"0.40\"> 40%</option>\r\n                    <option value=\"0.45\"> 55%</option>\r\n                    <option value=\"0.50\"> 50%</option>\r\n                    <option value=\"0.55\"> 55%</option>\r\n                    <option value=\"0.60\"> 60%</option>\r\n                    <option value=\"0.65\"> 65%</option>\r\n                    <option value=\"0.70\"> 70%</option>\r\n                    <option value=\"0.75\"> 75%</option>\r\n                    <option value=\"0.80\"> 80%</option>\r\n                    <option value=\"0.85\"> 85%</option>\r\n                    <option value=\"0.90\"> 90%</option>\r\n                    <option value=\"0.95\"> 95%</option>\r\n                    <option value=\"1\">100%</option>\r\n                </select>\r\n              </td>\r\n              <td id=\"\">\r\n                <select\r\n                  className=\"percent\"\r\n                  name=\"percent7\"\r\n                  value={this.state.percent7}\r\n                  onChange={(e) => {\r\n                    this.setState({\r\n                      percent7: e.target.value,\r\n                      validationError:\r\n                        e.target.value === \"\"\r\n                          ? \"vous devez sélectionner le truck\"\r\n                          : \"\",\r\n                    });\r\n                    this.CalculPondere(e.target.value, 7);\r\n                    this.TotalPourcent(e.target.value, 7);\r\n                  }}\r\n                >\r\n                    <option value=\"0\"> 0%</option>\r\n                    <option value=\"0.05\"> 5%</option>\r\n                    <option value=\"0.10\"> 10%</option>\r\n                    <option value=\"0.15\"> 15%</option>\r\n                    <option value=\"0.20\"> 20%</option>\r\n                    <option value=\"0.25\"> 25%</option>\r\n                    <option value=\"0.30\"> 30%</option>\r\n                    <option value=\"0.35\"> 35%</option>\r\n                    <option value=\"0.40\"> 40%</option>\r\n                    <option value=\"0.45\"> 55%</option>\r\n                    <option value=\"0.50\"> 50%</option>\r\n                    <option value=\"0.55\"> 55%</option>\r\n                    <option value=\"0.60\"> 60%</option>\r\n                    <option value=\"0.65\"> 65%</option>\r\n                    <option value=\"0.70\"> 70%</option>\r\n                    <option value=\"0.75\"> 75%</option>\r\n                    <option value=\"0.80\"> 80%</option>\r\n                    <option value=\"0.85\"> 85%</option>\r\n                    <option value=\"0.90\"> 90%</option>\r\n                    <option value=\"0.95\"> 95%</option>\r\n                    <option value=\"1\">100%</option>\r\n                </select>\r\n              </td>\r\n              <td id=\"\">\r\n                <select\r\n                  className=\"percent\"\r\n                  name=\"percent8\"\r\n                  value={this.state.percent8}\r\n                  onChange={(e) => {\r\n                    this.setState({\r\n                      percent8: e.target.value,\r\n                      validationError:\r\n                        e.target.value === \"\"\r\n                          ? \"vous devez sélectionner le truck\"\r\n                          : \"\",\r\n                    });\r\n                    this.CalculPondere(e.target.value, 8);\r\n                    this.TotalPourcent(e.target.value, 8);\r\n                  }}\r\n                >\r\n                    <option value=\"0\"> 0%</option>\r\n                    <option value=\"0.05\"> 5%</option>\r\n                    <option value=\"0.10\"> 10%</option>\r\n                    <option value=\"0.15\"> 15%</option>\r\n                    <option value=\"0.20\"> 20%</option>\r\n                    <option value=\"0.25\"> 25%</option>\r\n                    <option value=\"0.30\"> 30%</option>\r\n                    <option value=\"0.35\"> 35%</option>\r\n                    <option value=\"0.40\"> 40%</option>\r\n                    <option value=\"0.45\"> 55%</option>\r\n                    <option value=\"0.50\"> 50%</option>\r\n                    <option value=\"0.55\"> 55%</option>\r\n                    <option value=\"0.60\"> 60%</option>\r\n                    <option value=\"0.65\"> 65%</option>\r\n                    <option value=\"0.70\"> 70%</option>\r\n                    <option value=\"0.75\"> 75%</option>\r\n                    <option value=\"0.80\"> 80%</option>\r\n                    <option value=\"0.85\"> 85%</option>\r\n                    <option value=\"0.90\"> 90%</option>\r\n                    <option value=\"0.95\"> 95%</option>\r\n                    <option value=\"1\">100%</option>\r\n                </select>\r\n              </td>\r\n              <td id=\"\">\r\n                <select\r\n                  className=\"percent\"\r\n                  name=\"percent9\"\r\n                  value={this.state.percent9}\r\n                  onChange={(e) => {\r\n                    this.setState({\r\n                      percent9: e.target.value,\r\n                      validationError:\r\n                        e.target.value === \"\"\r\n                          ? \"vous devez sélectionner le truck\"\r\n                          : \"\",\r\n                    });\r\n                    this.CalculPondere(e.target.value, 9);\r\n                    this.TotalPourcent(e.target.value, 9);\r\n                  }}\r\n                >\r\n                    <option value=\"0\"> 0%</option>\r\n                    <option value=\"0.05\"> 5%</option>\r\n                    <option value=\"0.10\"> 10%</option>\r\n                    <option value=\"0.15\"> 15%</option>\r\n                    <option value=\"0.20\"> 20%</option>\r\n                    <option value=\"0.25\"> 25%</option>\r\n                    <option value=\"0.30\"> 30%</option>\r\n                    <option value=\"0.35\"> 35%</option>\r\n                    <option value=\"0.40\"> 40%</option>\r\n                    <option value=\"0.45\"> 55%</option>\r\n                    <option value=\"0.50\"> 50%</option>\r\n                    <option value=\"0.55\"> 55%</option>\r\n                    <option value=\"0.60\"> 60%</option>\r\n                    <option value=\"0.65\"> 65%</option>\r\n                    <option value=\"0.70\"> 70%</option>\r\n                    <option value=\"0.75\"> 75%</option>\r\n                    <option value=\"0.80\"> 80%</option>\r\n                    <option value=\"0.85\"> 85%</option>\r\n                    <option value=\"0.90\"> 90%</option>\r\n                    <option value=\"0.95\"> 95%</option>\r\n                    <option value=\"1\">100%</option>\r\n                </select>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"first\">Forecast justication</td>\r\n              <td colSpan=\"11\">\r\n                <textarea\r\n                  name=\"justif\"\r\n                  placeholder=\"NB: Please briefly explain the basis for your commodity price forecast\r\n\r\n\r\n                  \"\r\n                  rows=\"4\"\r\n                  style={{ width: \"100%\" }}\r\n                ></textarea>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"first\">General Comments</td>\r\n              <td colSpan=\"11\">\r\n                <textarea\r\n                  name=\"comments\"\r\n                  placeholder=\"NB: If you wish to make any general comments about the consensus commodity price forecast\r\n\r\n\r\n                  \"\r\n                  rows=\"5\"\r\n                  style={{ width: \"100%\" }}\r\n                ></textarea>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"first\">Share document</td>\r\n              <td>\r\n                <input type=\"file\" id=\"myFile\" name=\"filename\" />\r\n              </td>\r\n              <td colSpan=\"10\">\r\n                <i>\r\n                  {\" \"}\r\n                  NB: Please briefly explain the relevance of the document to\r\n                  copper price forecasts. (Please ensure you are permitted to\r\n                  share the document before sharing){\" \"}\r\n                </i>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"first\">Submit forecast</td>\r\n              <td>\r\n                {/*    <button\r\n                  type=\"button\"\r\n                  name=\"Submit\"\r\n                  className=\"btn btn-info btn-block mt-4\"\r\n                >\r\n                  Yes\r\n                </button> */}\r\n                <input\r\n                  type=\"submit\"\r\n                  placeholder=\"YES\"\r\n                  className=\"btn btn-info btn-block mt-4\"\r\n                />\r\n              </td>\r\n              <td colSpan=\"10\">\r\n                <i>\r\n                  NB: You can submit forecasts as often as you chose. Please try\r\n                  keep forecasts realistic. Any abnormal or extreme forecasts\r\n                  (more than 50% different from the prevailing consensus\r\n                  forecast will be ignored in any calculations).\r\n                </i>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"first\">Date</td>\r\n              <td>\r\n                <p id=\"Date\">\r\n                  {new Date().toLocaleDateString(\"en-US\", {\r\n                    weekday: \"long\",\r\n                    year: \"numeric\",\r\n                    month: \"long\",\r\n                    day: \"numeric\",\r\n                  })}\r\n                </p>\r\n              </td>\r\n              <td colSpan=\"10\" rowSpan=\"2\">\r\n                <i>\r\n                  NB: This will be the date and time used to record your\r\n                  commodity price forecast. The date and time will also be used\r\n                  in the ranking calculations.\r\n                </i>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"first\">Time</td>\r\n              <td>\r\n                <p id=\"Time\">{new Date().toLocaleTimeString()}</p>\r\n              </td>\r\n            </tr>\r\n          </table>\r\n        </form>\r\n        <div>\r\n          <MonthForecast />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCopperInput.propTypes = {\r\n  //logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(CopperInput);\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport TextFieldGroup from \"./common/TextFieldGroup\";\r\n\r\nimport { registerPrice } from \"../actions/inputAct\";\r\n\r\n//commodity, month, floorprice, ratio\r\nexport class MonthPrices extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      commodity: \"\",\r\n      month: \"\",\r\n      floorprice: \"\",\r\n      constant1: \"\",\r\n      months: [\r\n        \"January\",\r\n        \"February\",\r\n        \"March\",\r\n        \"April\",\r\n        \"May\",\r\n        \"June\",\r\n        \"July\",\r\n        \"August\",\r\n        \"September\",\r\n        \"October\",\r\n        \"November\",\r\n        \"December\",\r\n      ],\r\n      errors: {},\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    /* \r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    } */\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newPrice = {\r\n      commodity: this.state.commodity,\r\n      month: this.state.month,\r\n      floorprice: this.state.floorprice,\r\n      constant1: this.state.constant1,\r\n    };\r\n\r\n    axios\r\n      .post(\"api/prices/enregistrer\", newPrice)\r\n      .then((res) => console.log(res.data))\r\n      .catch((err) => this.setState({ errors: err.response.data }));\r\n    this.setState({ month: \"\", commodity: \"\", floorprice: \"\", constant1: \"\" });\r\n\r\n    // this.props.registerPrice(newPrice, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Prices </h1>\r\n              <p className=\"lead text-center\">\r\n                Input Price projections for a month\r\n              </p>\r\n              <form noValidate onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    id=\"mnth\"\r\n                    name=\"month\"\r\n                    value={this.state.month}\r\n                    className=\"form-control form-control-lg\"\r\n                    onChange={(e) =>\r\n                      this.setState({\r\n                        month: e.target.value,\r\n                        validationError:\r\n                          e.target.value === \"\" ? \"Select a month\" : \"\",\r\n                      })\r\n                    }\r\n                  >\r\n                    <option value=\"\">-- Select a month --</option>\r\n                    {this.state.months\r\n                      .slice(new Date().getMonth(), 12)\r\n                      .map((lemois) => (\r\n                        <option key={lemois.value} value={lemois.value}>\r\n                          {lemois + \" \" + new Date().getFullYear()}\r\n                        </option>\r\n                      ))}\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    name=\"commodity\"\r\n                    value={this.state.commodity}\r\n                    onChange={this.onChange}\r\n                    className=\"form-control form-control-lg\"\r\n                  >\r\n                    <option value=\"\">-- Select Commodity --</option>\r\n                    <option value=\"Copper\">Copper</option>\r\n                    <option value=\"Gold\">Gold</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <TextFieldGroup\r\n                  placeholder=\"Floor price\"\r\n                  name=\"floorprice\"\r\n                  type=\"number\"\r\n                  value={this.state.floorprice}\r\n                  onChange={this.onChange}\r\n                />\r\n\r\n                <TextFieldGroup\r\n                  placeholder=\"constant\"\r\n                  name=\"constant1\"\r\n                  type=\"number\"\r\n                  value={this.state.constant1}\r\n                  onChange={this.onChange}\r\n                />\r\n\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMonthPrices.protoTypes = {\r\n  registerPrice: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  input: state.input,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  /* registerPrice, */\r\n})(MonthPrices);\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport MonthForecast from \"./MonthForecast\";\r\n\r\nclass GoldInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      commodity: \"\",\r\n      month: \"\",\r\n      user: \"\",\r\n      priceAvr: \"\",\r\n      price1: \"\",\r\n      price2: \"\",\r\n      price3: \"\",\r\n      price4: \"\",\r\n      price5: \"\",\r\n      price6: \"\",\r\n      price7: \"\",\r\n      price8: \"\",\r\n      price9: \"\",\r\n      percent1: \"\",\r\n      percent2: \"\",\r\n      percent3: \"\",\r\n      percent4: \"\",\r\n      percent5: \"\",\r\n      percent6: \"\",\r\n      percent7: \"\",\r\n      percent8: \"\",\r\n      percent9: \"\",\r\n      justif: \"\",\r\n      generalcomments: \"\",\r\n      specificComments: \"\",\r\n      comments: \"\",\r\n      totpercent: \"\",\r\n      months: [\r\n        \"January\",\r\n        \"February\",\r\n        \"March\",\r\n        \"April\",\r\n        \"May\",\r\n        \"June\",\r\n        \"July\",\r\n        \"August\",\r\n        \"September\",\r\n        \"October\",\r\n        \"November\",\r\n        \"December\",\r\n      ],\r\n      foreprices: [8],\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newEntry = {\r\n      commodity: this.state.commodity,\r\n      month: this.state.month,\r\n      user: this.state.user,\r\n      priceAvr: this.state.priceAvr,\r\n      price1: this.state.price1,\r\n      price2: this.state.price2,\r\n      price3: this.state.price3,\r\n      price4: this.state.price4,\r\n      price5: this.state.price5,\r\n      price6: this.state.price6,\r\n      price7: this.state.price7,\r\n      price8: this.state.price8,\r\n      price9: this.state.price9,\r\n      percent1: this.state.percent1,\r\n      percent2: this.state.percent2,\r\n      percent3: this.state.percent3,\r\n      percent4: this.state.percent4,\r\n      percent5: this.state.percent5,\r\n      percent6: this.state.percent6,\r\n      percent7: this.state.percent7,\r\n      percent8: this.state.percent8,\r\n      percent9: this.state.percent9,\r\n      justif: this.state.justif,\r\n      comments: this.state.comments,\r\n    };\r\n\r\n    //this.props.saveInput(newEntry, this.props.history);\r\n    console.log(\"ok\");\r\n    axios\r\n      .post(\"/api/cinput/enregistrer\", newEntry)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n      })\r\n      .catch((err) => this.setState({ errors: err.response.data }));\r\n  }\r\n\r\n  fillPrices(sanza) {\r\n    this.setState({ price1: \"\" });\r\n    this.setState({ price2: \"\" });\r\n    this.setState({ price3: \"\" });\r\n    this.setState({ price4: \"\" });\r\n    this.setState({ price5: \"\" });\r\n    this.setState({ price6: \"\" });\r\n    this.setState({ price7: \"\" });\r\n    this.setState({ price8: \"\" });\r\n    this.setState({ price9: \"\" });\r\n\r\n    fetch(\"/api/beyi/commois/\" + sanza + \"&Gold\")\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        let yx = data;\r\n\r\n        console.log(yx);\r\n\r\n        let talo = data.map((mutengo) => {\r\n          //put it in array\r\n          this.setState({ price1: mutengo.floorprice + mutengo.constant1 * 0 });\r\n          this.setState({ price2: mutengo.floorprice + mutengo.constant1 * 1 });\r\n          this.setState({ price3: mutengo.floorprice + mutengo.constant1 * 2 });\r\n          this.setState({ price4: mutengo.floorprice + mutengo.constant1 * 3 });\r\n          this.setState({ price5: mutengo.floorprice + mutengo.constant1 * 4 });\r\n          this.setState({ price6: mutengo.floorprice + mutengo.constant1 * 5 });\r\n          this.setState({ price7: mutengo.floorprice + mutengo.constant1 * 6 });\r\n          this.setState({ price8: mutengo.floorprice + mutengo.constant1 * 7 });\r\n          this.setState({ price9: mutengo.floorprice + mutengo.constant1 * 8 });\r\n          return {\r\n            id: mutengo._id,\r\n          };\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  CalculPondere(vraipourcent, indice) {\r\n    this.setState({ priceAvr: \"\" });\r\n    let Moyenne =\r\n      this.state.price1 * (indice == 1 ? vraipourcent : this.state.percent1) +\r\n      this.state.price2 * (indice == 2 ? vraipourcent : this.state.percent2) +\r\n      this.state.price3 * (indice == 3 ? vraipourcent : this.state.percent3) +\r\n      this.state.price4 * (indice == 4 ? vraipourcent : this.state.percent4) +\r\n      this.state.price5 * (indice == 5 ? vraipourcent : this.state.percent5) +\r\n      this.state.price6 * (indice == 6 ? vraipourcent : this.state.percent6) +\r\n      this.state.price7 * (indice == 7 ? vraipourcent : this.state.percent7) +\r\n      this.state.price8 * (indice == 8 ? vraipourcent : this.state.percent8) +\r\n      this.state.price9 * (indice == 9 ? vraipourcent : this.state.percent9);\r\n    this.setState({ priceAvr: Moyenne });\r\n  }\r\n\r\n  TotalPourcent(vraipourcent1, indice1) {\r\n    this.setState({ totpercent: \"\" });\r\n    let tot =\r\n      (indice1 == 1 ? vraipourcent1 : this.state.percent1) * 100 +\r\n      (indice1 == 2 ? vraipourcent1 : this.state.percent2) * 100 +\r\n      (indice1 == 3 ? vraipourcent1 : this.state.percent3) * 100 +\r\n      (indice1 == 4 ? vraipourcent1 : this.state.percent4) * 100 +\r\n      (indice1 == 5 ? vraipourcent1 : this.state.percent5) * 100 +\r\n      (indice1 == 6 ? vraipourcent1 : this.state.percent6) * 100 +\r\n      (indice1 == 7 ? vraipourcent1 : this.state.percent7) * 100 +\r\n      (indice1 == 8 ? vraipourcent1 : this.state.percent8) * 100 +\r\n      (indice1 == 9 ? vraipourcent1 : this.state.percent9) * 100;\r\n    console.log(indice1);\r\n    console.log((indice1 == 1 ? vraipourcent1 : this.state.percent1) * 100);\r\n    console.log((indice1 == 2 ? vraipourcent1 : this.state.percent2) * 100);\r\n    this.setState({ totpercent: tot });\r\n  }\r\n  render() {\r\n    const { user } = this.props.auth;\r\n    return (\r\n      <div>\r\n        <form noValidate onSubmit={this.onSubmit}>\r\n          <table className=\"table table-bordered\" style={{ width: \"75%\" }}>\r\n            <tr>\r\n              <td colSpan=\"12\">\r\n                <b>\r\n                  Consensus Commodity Price Forecasting Deliberation Panel -\r\n                  Gold Input Sheet{\" \"}\r\n                </b>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"first\">\r\n                <label for=\"cmdt\">Commodity</label>\r\n              </td>\r\n              <td>\r\n                <b>Gold</b>\r\n              </td>\r\n              <td className=\"instruction\" rowSpan=\"3\" colSpan=\"11\">\r\n                <b>Instructions</b>:{\" \"}\r\n                <i>\r\n                  Please select a month on the Left for which you want to make a\r\n                  commodity price forecast. Once the month has been selected,\r\n                  please allocate the expected probability you would assign to\r\n                  the indicated price baskets below, such that the total\r\n                  probabilities sums to 100%. It would be greatly appreciated if\r\n                  you could also provide an indication of the basis for your\r\n                  commodity price forecast in the text box at the beneath the\r\n                  forecast probability table. Based on the combined inputs of\r\n                  all panel participants, a consensus commodity price forecast\r\n                  has been computed, please feel free to comment on the result\r\n                  relative to your views and other participants if you chose.\r\n                </i>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"first\">\r\n                <label for=\"mnth\">Month</label>\r\n              </td>\r\n              <td>\r\n                <select\r\n                  id=\"mnth\"\r\n                  name=\"month\"\r\n                  value={this.state.month}\r\n                  onChange={(e) => {\r\n                    this.setState({\r\n                      month: e.target.value,\r\n                      validationError:\r\n                        e.target.value === \"\" ? \"Select a month\" : \"\",\r\n                    });\r\n                    this.fillPrices(e.target.value);\r\n                  }}\r\n                >\r\n                  <option value=\"\">-- Select a month --</option>\r\n                  {this.state.months\r\n                    .slice(new Date().getMonth(), 12)\r\n                    .map((lemois) => (\r\n                      <option key={lemois.value} value={lemois.value}>\r\n                        {lemois + \" \" + new Date().getFullYear()}\r\n                      </option>\r\n                    ))}\r\n                </select>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"first\">\r\n                <label for=\"cUserN\">Gold Username</label>\r\n              </td>\r\n              <td>\r\n                <h3>{user.name}</h3>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"first\">Forecast price</td>\r\n              <td>\r\n                Gold{\" \"}\r\n                {/*this.state.months[new Date().getMonth()]*/ this.state.month}\r\n              </td>\r\n              <td id=\"avrg\">{this.state.priceAvr}</td>\r\n              <td id=\"\"> {this.state.price1} </td>\r\n              <td id=\"\">{this.state.price2}</td>\r\n              <td id=\"\">{this.state.price3}</td>\r\n              <td id=\"\">{this.state.price4}</td>\r\n              <td id=\"\">{this.state.price5}</td>\r\n              <td id=\"\">{this.state.price6}</td>\r\n              <td id=\"\">{this.state.price7}</td>\r\n              <td id=\"\">{this.state.price8}</td>\r\n              <td id=\"\">{this.state.price9}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"first\">Forecast estimate</td>\r\n              <td>NB: total must equal 100%</td>\r\n              <td id=\"sum_percent\">{this.state.totpercent} %</td>\r\n              <td id=\"\">\r\n                <select\r\n                  className=\"percent\"\r\n                  name=\"percent1\"\r\n                  value={this.state.percent1}\r\n                  onChange={(e) => {\r\n                    this.setState({\r\n                      percent1: e.target.value,\r\n                      validationError:\r\n                        e.target.value === \"\" ? \"vous devez \" : \"\",\r\n                    });\r\n                    this.CalculPondere(e.target.value, 1);\r\n                    this.TotalPourcent(e.target.value, 1);\r\n                  }}\r\n                >\r\n                    <option value=\"0\"> 0%</option>\r\n                    <option value=\"0.05\"> 5%</option>\r\n                    <option value=\"0.10\"> 10%</option>\r\n                    <option value=\"0.15\"> 15%</option>\r\n                    <option value=\"0.20\"> 20%</option>\r\n                    <option value=\"0.25\"> 25%</option>\r\n                    <option value=\"0.30\"> 30%</option>\r\n                    <option value=\"0.35\"> 35%</option>\r\n                    <option value=\"0.40\"> 40%</option>\r\n                    <option value=\"0.45\"> 55%</option>\r\n                    <option value=\"0.50\"> 50%</option>\r\n                    <option value=\"0.55\"> 55%</option>\r\n                    <option value=\"0.60\"> 60%</option>\r\n                    <option value=\"0.65\"> 65%</option>\r\n                    <option value=\"0.70\"> 70%</option>\r\n                    <option value=\"0.75\"> 75%</option>\r\n                    <option value=\"0.80\"> 80%</option>\r\n                    <option value=\"0.85\"> 85%</option>\r\n                    <option value=\"0.90\"> 90%</option>\r\n                    <option value=\"0.95\"> 95%</option>\r\n                    <option value=\"1\">100%</option>\r\n                </select>\r\n              </td>\r\n              <td id=\"\">\r\n                <select\r\n                  className=\"percent\"\r\n                  name=\"percent2\"\r\n                  value={this.state.percent2}\r\n                  onChange={(e) => {\r\n                    this.setState({\r\n                      percent2: e.target.value,\r\n                      validationError:\r\n                        e.target.value === \"\"\r\n                          ? \"vous devez sélectionner le truck\"\r\n                          : \"\",\r\n                    });\r\n                    this.CalculPondere(e.target.value, 2);\r\n                    this.TotalPourcent(e.target.value, 2);\r\n                  }}\r\n                >\r\n                    <option value=\"0\"> 0%</option>\r\n                    <option value=\"0.05\"> 5%</option>\r\n                    <option value=\"0.10\"> 10%</option>\r\n                    <option value=\"0.15\"> 15%</option>\r\n                    <option value=\"0.20\"> 20%</option>\r\n                    <option value=\"0.25\"> 25%</option>\r\n                    <option value=\"0.30\"> 30%</option>\r\n                    <option value=\"0.35\"> 35%</option>\r\n                    <option value=\"0.40\"> 40%</option>\r\n                    <option value=\"0.45\"> 55%</option>\r\n                    <option value=\"0.50\"> 50%</option>\r\n                    <option value=\"0.55\"> 55%</option>\r\n                    <option value=\"0.60\"> 60%</option>\r\n                    <option value=\"0.65\"> 65%</option>\r\n                    <option value=\"0.70\"> 70%</option>\r\n                    <option value=\"0.75\"> 75%</option>\r\n                    <option value=\"0.80\"> 80%</option>\r\n                    <option value=\"0.85\"> 85%</option>\r\n                    <option value=\"0.90\"> 90%</option>\r\n                    <option value=\"0.95\"> 95%</option>\r\n                    <option value=\"1\">100%</option>\r\n                </select>\r\n              </td>\r\n              <td id=\"\">\r\n                <select\r\n                  className=\"percent\"\r\n                  name=\"percent3\"\r\n                  value={this.state.percent3}\r\n                  onChange={(e) => {\r\n                    this.setState({\r\n                      percent3: e.target.value,\r\n                      validationError:\r\n                        e.target.value === \"\"\r\n                          ? \"vous devez sélectionner le truck\"\r\n                          : \"\",\r\n                    });\r\n                    this.CalculPondere(e.target.value, 3);\r\n                    this.TotalPourcent(e.target.value, 3);\r\n                  }}\r\n                >\r\n                    <option value=\"0\"> 0%</option>\r\n                    <option value=\"0.05\"> 5%</option>\r\n                    <option value=\"0.10\"> 10%</option>\r\n                    <option value=\"0.15\"> 15%</option>\r\n                    <option value=\"0.20\"> 20%</option>\r\n                    <option value=\"0.25\"> 25%</option>\r\n                    <option value=\"0.30\"> 30%</option>\r\n                    <option value=\"0.35\"> 35%</option>\r\n                    <option value=\"0.40\"> 40%</option>\r\n                    <option value=\"0.45\"> 55%</option>\r\n                    <option value=\"0.50\"> 50%</option>\r\n                    <option value=\"0.55\"> 55%</option>\r\n                    <option value=\"0.60\"> 60%</option>\r\n                    <option value=\"0.65\"> 65%</option>\r\n                    <option value=\"0.70\"> 70%</option>\r\n                    <option value=\"0.75\"> 75%</option>\r\n                    <option value=\"0.80\"> 80%</option>\r\n                    <option value=\"0.85\"> 85%</option>\r\n                    <option value=\"0.90\"> 90%</option>\r\n                    <option value=\"0.95\"> 95%</option>\r\n                    <option value=\"1\">100%</option>\r\n                </select>\r\n              </td>\r\n              <td id=\"\">\r\n                <select\r\n                  className=\"percent\"\r\n                  name=\"percent4\"\r\n                  value={this.state.percent4}\r\n                  onChange={(e) => {\r\n                    this.setState({\r\n                      percent4: e.target.value,\r\n                      validationError:\r\n                        e.target.value === \"\"\r\n                          ? \"vous devez sélectionner le truck\"\r\n                          : \"\",\r\n                    });\r\n                    this.CalculPondere(e.target.value, 4);\r\n                    this.TotalPourcent(e.target.value, 4);\r\n                  }}\r\n                >\r\n                    <option value=\"0\"> 0%</option>\r\n                    <option value=\"0.05\"> 5%</option>\r\n                    <option value=\"0.10\"> 10%</option>\r\n                    <option value=\"0.15\"> 15%</option>\r\n                    <option value=\"0.20\"> 20%</option>\r\n                    <option value=\"0.25\"> 25%</option>\r\n                    <option value=\"0.30\"> 30%</option>\r\n                    <option value=\"0.35\"> 35%</option>\r\n                    <option value=\"0.40\"> 40%</option>\r\n                    <option value=\"0.45\"> 55%</option>\r\n                    <option value=\"0.50\"> 50%</option>\r\n                    <option value=\"0.55\"> 55%</option>\r\n                    <option value=\"0.60\"> 60%</option>\r\n                    <option value=\"0.65\"> 65%</option>\r\n                    <option value=\"0.70\"> 70%</option>\r\n                    <option value=\"0.75\"> 75%</option>\r\n                    <option value=\"0.80\"> 80%</option>\r\n                    <option value=\"0.85\"> 85%</option>\r\n                    <option value=\"0.90\"> 90%</option>\r\n                    <option value=\"0.95\"> 95%</option>\r\n                    <option value=\"1\">100%</option>\r\n                </select>\r\n              </td>\r\n              <td id=\"\">\r\n                <select\r\n                  className=\"percent\"\r\n                  name=\"percent5\"\r\n                  value={this.state.percent5}\r\n                  onChange={(e) => {\r\n                    this.setState({\r\n                      percent5: e.target.value,\r\n                      validationError:\r\n                        e.target.value === \"\"\r\n                          ? \"vous devez sélectionner le truck\"\r\n                          : \"\",\r\n                    });\r\n                    this.CalculPondere(e.target.value, 5);\r\n                    this.TotalPourcent(e.target.value, 5);\r\n                  }}\r\n                >\r\n                    <option value=\"0\"> 0%</option>\r\n                    <option value=\"0.05\"> 5%</option>\r\n                    <option value=\"0.10\"> 10%</option>\r\n                    <option value=\"0.15\"> 15%</option>\r\n                    <option value=\"0.20\"> 20%</option>\r\n                    <option value=\"0.25\"> 25%</option>\r\n                    <option value=\"0.30\"> 30%</option>\r\n                    <option value=\"0.35\"> 35%</option>\r\n                    <option value=\"0.40\"> 40%</option>\r\n                    <option value=\"0.45\"> 55%</option>\r\n                    <option value=\"0.50\"> 50%</option>\r\n                    <option value=\"0.55\"> 55%</option>\r\n                    <option value=\"0.60\"> 60%</option>\r\n                    <option value=\"0.65\"> 65%</option>\r\n                    <option value=\"0.70\"> 70%</option>\r\n                    <option value=\"0.75\"> 75%</option>\r\n                    <option value=\"0.80\"> 80%</option>\r\n                    <option value=\"0.85\"> 85%</option>\r\n                    <option value=\"0.90\"> 90%</option>\r\n                    <option value=\"0.95\"> 95%</option>\r\n                    <option value=\"1\">100%</option>\r\n                </select>\r\n              </td>\r\n              <td id=\"\">\r\n                <select\r\n                  className=\"percent\"\r\n                  name=\"percent6\"\r\n                  value={this.state.percent6}\r\n                  onChange={(e) => {\r\n                    this.setState({\r\n                      percent6: e.target.value,\r\n                      validationError:\r\n                        e.target.value === \"\"\r\n                          ? \"vous devez sélectionner le truck\"\r\n                          : \"\",\r\n                    });\r\n                    this.CalculPondere(e.target.value, 6);\r\n                    this.TotalPourcent(e.target.value, 6);\r\n                  }}\r\n                >\r\n                    <option value=\"0\"> 0%</option>\r\n                    <option value=\"0.05\"> 5%</option>\r\n                    <option value=\"0.10\"> 10%</option>\r\n                    <option value=\"0.15\"> 15%</option>\r\n                    <option value=\"0.20\"> 20%</option>\r\n                    <option value=\"0.25\"> 25%</option>\r\n                    <option value=\"0.30\"> 30%</option>\r\n                    <option value=\"0.35\"> 35%</option>\r\n                    <option value=\"0.40\"> 40%</option>\r\n                    <option value=\"0.45\"> 55%</option>\r\n                    <option value=\"0.50\"> 50%</option>\r\n                    <option value=\"0.55\"> 55%</option>\r\n                    <option value=\"0.60\"> 60%</option>\r\n                    <option value=\"0.65\"> 65%</option>\r\n                    <option value=\"0.70\"> 70%</option>\r\n                    <option value=\"0.75\"> 75%</option>\r\n                    <option value=\"0.80\"> 80%</option>\r\n                    <option value=\"0.85\"> 85%</option>\r\n                    <option value=\"0.90\"> 90%</option>\r\n                    <option value=\"0.95\"> 95%</option>\r\n                    <option value=\"1\">100%</option>\r\n                </select>\r\n              </td>\r\n              <td id=\"\">\r\n                <select\r\n                  className=\"percent\"\r\n                  name=\"percent7\"\r\n                  value={this.state.percent7}\r\n                  onChange={(e) => {\r\n                    this.setState({\r\n                      percent7: e.target.value,\r\n                      validationError:\r\n                        e.target.value === \"\"\r\n                          ? \"vous devez sélectionner le truck\"\r\n                          : \"\",\r\n                    });\r\n                    this.CalculPondere(e.target.value, 7);\r\n                    this.TotalPourcent(e.target.value, 7);\r\n                  }}\r\n                >\r\n                    <option value=\"0\"> 0%</option>\r\n                    <option value=\"0.05\"> 5%</option>\r\n                    <option value=\"0.10\"> 10%</option>\r\n                    <option value=\"0.15\"> 15%</option>\r\n                    <option value=\"0.20\"> 20%</option>\r\n                    <option value=\"0.25\"> 25%</option>\r\n                    <option value=\"0.30\"> 30%</option>\r\n                    <option value=\"0.35\"> 35%</option>\r\n                    <option value=\"0.40\"> 40%</option>\r\n                    <option value=\"0.45\"> 55%</option>\r\n                    <option value=\"0.50\"> 50%</option>\r\n                    <option value=\"0.55\"> 55%</option>\r\n                    <option value=\"0.60\"> 60%</option>\r\n                    <option value=\"0.65\"> 65%</option>\r\n                    <option value=\"0.70\"> 70%</option>\r\n                    <option value=\"0.75\"> 75%</option>\r\n                    <option value=\"0.80\"> 80%</option>\r\n                    <option value=\"0.85\"> 85%</option>\r\n                    <option value=\"0.90\"> 90%</option>\r\n                    <option value=\"0.95\"> 95%</option>\r\n                    <option value=\"1\">100%</option>\r\n                </select>\r\n              </td>\r\n              <td id=\"\">\r\n                <select\r\n                  className=\"percent\"\r\n                  name=\"percent8\"\r\n                  value={this.state.percent8}\r\n                  onChange={(e) => {\r\n                    this.setState({\r\n                      percent8: e.target.value,\r\n                      validationError:\r\n                        e.target.value === \"\"\r\n                          ? \"vous devez sélectionner le truck\"\r\n                          : \"\",\r\n                    });\r\n                    this.CalculPondere(e.target.value, 8);\r\n                    this.TotalPourcent(e.target.value, 8);\r\n                  }}\r\n                >\r\n                    <option value=\"0\"> 0%</option>\r\n                    <option value=\"0.05\"> 5%</option>\r\n                    <option value=\"0.10\"> 10%</option>\r\n                    <option value=\"0.15\"> 15%</option>\r\n                    <option value=\"0.20\"> 20%</option>\r\n                    <option value=\"0.25\"> 25%</option>\r\n                    <option value=\"0.30\"> 30%</option>\r\n                    <option value=\"0.35\"> 35%</option>\r\n                    <option value=\"0.40\"> 40%</option>\r\n                    <option value=\"0.45\"> 55%</option>\r\n                    <option value=\"0.50\"> 50%</option>\r\n                    <option value=\"0.55\"> 55%</option>\r\n                    <option value=\"0.60\"> 60%</option>\r\n                    <option value=\"0.65\"> 65%</option>\r\n                    <option value=\"0.70\"> 70%</option>\r\n                    <option value=\"0.75\"> 75%</option>\r\n                    <option value=\"0.80\"> 80%</option>\r\n                    <option value=\"0.85\"> 85%</option>\r\n                    <option value=\"0.90\"> 90%</option>\r\n                    <option value=\"0.95\"> 95%</option>\r\n                    <option value=\"1\">100%</option>\r\n                </select>\r\n              </td>\r\n              <td id=\"\">\r\n                <select\r\n                  className=\"percent\"\r\n                  name=\"percent9\"\r\n                  value={this.state.percent9}\r\n                  onChange={(e) => {\r\n                    this.setState({\r\n                      percent9: e.target.value,\r\n                      validationError:\r\n                        e.target.value === \"\"\r\n                          ? \"vous devez sélectionner le truck\"\r\n                          : \"\",\r\n                    });\r\n                    this.CalculPondere(e.target.value, 9);\r\n                    this.TotalPourcent(e.target.value, 9);\r\n                  }}\r\n                >\r\n                    <option value=\"0\"> 0%</option>\r\n                    <option value=\"0.05\"> 5%</option>\r\n                    <option value=\"0.10\"> 10%</option>\r\n                    <option value=\"0.15\"> 15%</option>\r\n                    <option value=\"0.20\"> 20%</option>\r\n                    <option value=\"0.25\"> 25%</option>\r\n                    <option value=\"0.30\"> 30%</option>\r\n                    <option value=\"0.35\"> 35%</option>\r\n                    <option value=\"0.40\"> 40%</option>\r\n                    <option value=\"0.45\"> 55%</option>\r\n                    <option value=\"0.50\"> 50%</option>\r\n                    <option value=\"0.55\"> 55%</option>\r\n                    <option value=\"0.60\"> 60%</option>\r\n                    <option value=\"0.65\"> 65%</option>\r\n                    <option value=\"0.70\"> 70%</option>\r\n                    <option value=\"0.75\"> 75%</option>\r\n                    <option value=\"0.80\"> 80%</option>\r\n                    <option value=\"0.85\"> 85%</option>\r\n                    <option value=\"0.90\"> 90%</option>\r\n                    <option value=\"0.95\"> 95%</option>\r\n                    <option value=\"1\">100%</option>\r\n                </select>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"first\">Forecast justication</td>\r\n              <td colSpan=\"11\">\r\n                <textarea\r\n                  name=\"justif\"\r\n                  placeholder=\"NB: Please briefly explain the basis for your commodity price forecast\r\n\r\n\r\n                  \"\r\n                  rows=\"4\"\r\n                  style={{ width: \"100%\" }}\r\n                ></textarea>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"first\">General Comments</td>\r\n              <td colSpan=\"11\">\r\n                <textarea\r\n                  name=\"comments\"\r\n                  placeholder=\"NB: If you wish to make any general comments about the consensus commodity price forecast\r\n\r\n\r\n                  \"\r\n                  rows=\"5\"\r\n                  style={{ width: \"100%\" }}\r\n                ></textarea>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"first\">Share document</td>\r\n              <td>\r\n                <input type=\"file\" id=\"myFile\" name=\"filename\" />\r\n              </td>\r\n              <td colSpan=\"10\">\r\n                <i>\r\n                  {\" \"}\r\n                  NB: Please briefly explain the relevance of the document to\r\n                  Gold price forecasts. (Please ensure you are permitted to\r\n                  share the document before sharing){\" \"}\r\n                </i>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"first\">Submit forecast</td>\r\n              <td>\r\n                {/*    <button\r\n                  type=\"button\"\r\n                  name=\"Submit\"\r\n                  className=\"btn btn-info btn-block mt-4\"\r\n                >\r\n                  Yes\r\n                </button> */}\r\n                <input\r\n                  type=\"submit\"\r\n                  placeholder=\"YES\"\r\n                  className=\"btn btn-info btn-block mt-4\"\r\n                />\r\n              </td>\r\n              <td colSpan=\"10\">\r\n                <i>\r\n                  NB: You can submit forecasts as often as you chose. Please try\r\n                  keep forecasts realistic. Any abnormal or extreme forecasts\r\n                  (more than 50% different from the prevailing consensus\r\n                  forecast will be ignored in any calculations).\r\n                </i>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"first\">Date</td>\r\n              <td>\r\n                <p id=\"Date\">\r\n                  {new Date().toLocaleDateString(\"en-US\", {\r\n                    weekday: \"long\",\r\n                    year: \"numeric\",\r\n                    month: \"long\",\r\n                    day: \"numeric\",\r\n                  })}\r\n                </p>\r\n              </td>\r\n              <td colSpan=\"10\" rowSpan=\"2\">\r\n                <i>\r\n                  NB: This will be the date and time used to record your\r\n                  commodity price forecast. The date and time will also be used\r\n                  in the ranking calculations.\r\n                </i>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"first\">Time</td>\r\n              <td>\r\n                <p id=\"Time\">{new Date().toLocaleTimeString()}</p>\r\n              </td>\r\n            </tr>\r\n          </table>\r\n        </form>\r\n        <div>\r\n          <MonthForecast />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nGoldInput.propTypes = {\r\n  //logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(GoldInput);\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport Navbar from \"./components/layout/Navbar\";\nimport Footer from \"./components/layout/Footer\";\nimport Landing from \"./components/layout/Landing\";\n\nimport \"./App.css\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport Consent from \"./components/auth/Consent\";\nimport CopperInput from \"./components/CopperInput\";\nimport { MonthPrices } from \"./components/MonthPrices\";\nimport GoldInput from \"./components/GoldInput\";\n\n// Check for token\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  setAuthToken(localStorage.jwtToken);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(localStorage.jwtToken);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n\n  // Check for expired token\n  const currentTime = Date.now() / 1000;\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n    // Clear current Profile\n    //store.dispatch(clearCurrentProfile());\n    // Redirect to login\n    window.location.href = \"/login\";\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Navbar />\n          <Route exact path=\"/\" component={Landing} />\n          <div className=\"container\">\n            <Route exact path=\"/Register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/consent\" component={Consent} />\n            <Route exact path=\"/copperinput\" component={CopperInput} />\n            <Route exact path=\"/goldinput\" component={GoldInput} />\n            <Route exact path=\"/MonthPrices\" component={MonthPrices} />\n          </div>\n          <Footer />\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}